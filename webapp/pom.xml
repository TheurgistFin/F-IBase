<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>webapp</artifactId>
  <packaging>war</packaging>
  <name>Forge &amp; Illusion - Web App</name>
  <description>Forge &amp; Illusion - Web Application</description>
  <parent>
    <groupId>fi.foyt.fni</groupId>
    <artifactId>parent</artifactId>
    <version>3.0.25-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <!-- Test -->

    <wildfly.home>${project.basedir}/.cargo/extracts/wildfly-8.1.0.CR1/wildfly-8.1.0.CR1</wildfly.home>
    <wildfly.version>8.1.0.CR1</wildfly.version>
    <h2.version>1.4.177</h2.version>
    <it.port.http>8080</it.port.http>
    <it.port.https>8443</it.port.https>
    <it.host>dev.forgeandillusion.net</it.host>
    <it.ctx>fnici</it.ctx>
    <it.jdbc.driver>org.h2.Driver</it.jdbc.driver>
    <it.jdbc.url>jdbc:h2:file:${project.build.directory}/h2;AUTO_SERVER=TRUE</it.jdbc.url>
    <it.jdbc.jndi>java:/jboss/datasources/MysqlDS</it.jdbc.jndi>
    <it.jdbc.username>sa</it.jdbc.username>
    <it.jdbc.password>sa</it.jdbc.password>
  </properties>

  <dependencies>

    <!-- Servlet -->

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Mail -->

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- CDI -->

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EJB -->

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EL -->

    <dependency>
      <groupId>org.jboss.spec.javax.el</groupId>
      <artifactId>jboss-el-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Faces -->

    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- RESTEasy -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Xalan -->

    <dependency>
      <groupId>org.apache.xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- PrettyFaces -->

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-faces</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-cdi</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-config-prettyfaces</artifactId>
    </dependency>

    <!-- NGram -->

    <dependency>
      <groupId>de.spieleck.app.ngramj</groupId>
      <artifactId>cngram</artifactId>
    </dependency>

    <!-- Apache Commons -->

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>provided</scope>
    </dependency> 

    <!-- Http components -->

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>   

    <!-- FnI -->

    <dependency>
      <groupId>fi.foyt.fni</groupId>
      <artifactId>persistence</artifactId>
    </dependency>

    <!-- Paytrail -->

    <dependency>
      <groupId>fi.foyt.paytrail</groupId>
      <artifactId>sdk</artifactId>
    </dependency>

    <!-- Scribe -->

    <dependency>
      <groupId>org.scribe</groupId>
      <artifactId>scribe</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Flying Saucer -->

    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-pdf-itext5</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- CSS Parser -->

    <dependency>
      <groupId>net.sourceforge.cssparser</groupId>
      <artifactId>cssparser</artifactId>
    </dependency>

    <!-- Diff patch match -->

    <dependency>
      <groupId>diff_match_patch</groupId>
      <artifactId>diff_match_patch</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- JTidy -->

    <dependency>
      <groupId>net.sf.jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Google Drive API -->

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-drive</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Rome -->

    <dependency>
      <groupId>net.java.dev.rome</groupId>
      <artifactId>rome</artifactId>
    </dependency>

    <!-- Jackson -->

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Hibernate Search -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-orm</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Lucene Highlighter -->

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-highlighter</artifactId>
    </dependency>

    <!-- Jackson -->

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Test -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
      <version>2.41.0</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
   
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jasig.maven</groupId>
                    <artifactId>sass-maven-plugin</artifactId>
                    <versionRange>[1.1.1,)</versionRange>
                    <goals>
                      <goal>update-stylesheets</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <versionRange>[1.4,)</versionRange>
                    <goals>
                      <goal>clean</goal>
                      <goal>generateKeyPair</goal>
                      <goal>exportCertificate</goal>
                      <goal>importCertificate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <versionRange>[1.0-alpha-2,)</versionRange>
                    <goals>
                      <goal>read-project-properties</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>sassProcessSource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <useCompass>true</useCompass>
              <sassSourceDirectory>${basedir}/src/main/webapp/resources/novus/scss/</sassSourceDirectory>
              <destination>${project.build.directory}/${project.build.finalName}/resources/novus/css</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Dependencies>org.hibernate.search.orm services, org.apache.commons.io, org.apache.commons.collections, org.codehaus.jackson.jackson-core-asl</Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <systemPropertyVariables>
            <jboss.home>${wildfly.home}</jboss.home>
            <module.path>${wildfly.home}/modules</module.path>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>src/test/resources/it.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <systemPropertyVariables>
            <jboss.home>${wildfly.home}</jboss.home>
            <module.path>${wildfly.home}/modules</module.path>
            <it.host>${it.host}</it.host>
            <it.port.http>${it.port.http}</it.port.http>
            <it.port.https>${it.port.https}</it.port.https>
            <it.ctx>${it.ctx}</it.ctx>
            <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
            <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
            <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
            <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
            <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
            <it.google.apiKey>${it.google.apiKey}</it.google.apiKey>
            <it.google.apiSecret>${it.google.apiSecret}</it.google.apiSecret>
            <it.google.username>${it.google.username}</it.google.username>
            <it.google.password>${it.google.password}</it.google.password>
            <it.facebook.apiKey>${it.facebook.apiKey}</it.facebook.apiKey>
            <it.facebook.apiSecret>${it.facebook.apiSecret}</it.facebook.apiSecret>
            <it.facebook.username>${it.facebook.username}</it.facebook.username>
            <it.facebook.password>${it.facebook.password}</it.facebook.password>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sql-maven-plugin</artifactId>
        <version>1.5</version>
        <dependencies>
          <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
          </dependency>
        </dependencies>

        <configuration>      
          <driver>${it.jdbc.driver}</driver>
          <url>${it.jdbc.url}</url>
          <username>${it.jdbc.username}</username>
          <password>${it.jdbc.password}</password>
        </configuration>
        <executions>
          <execution>
            <id>create-schema</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <srcFiles>
                <srcFile>src/test/resources/create.sql</srcFile>
                <srcFile>src/test/resources/data.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
          
          <execution>
            <id>drop-db-after-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <autocommit>true</autocommit>
              <srcFiles>
                <srcFile>src/test/resources/drop.sql</srcFile>
              </srcFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>keytool-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <id>keyclean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <keystore>${project.build.directory}/fnici.keystore</keystore>
            </configuration>
          </execution>
          <execution> 
            <phase>generate-resources</phase>
            <id>genkey</id>
            <goals>
              <goal>generateKeyPair</goal>
            </goals>
            <configuration>
              <keystore>${project.build.directory}/fnici.keystore</keystore>
              <dname>cn=${it.host}, ou=None, L=Test, ST=Test, o=Test, c=TE</dname>
              <storepass>storepass</storepass>
              <alias>fnici</alias>
              <keyalg>RSA</keyalg>
              <keysize>2048</keysize>
            </configuration>
          </execution>
          <execution>
            <phase>generate-resources</phase>
            <id>exportkey</id>
            <goals>
              <goal>exportCertificate</goal>
            </goals>
            <configuration>
              <keystore>${project.build.directory}/fnici.keystore</keystore>
              <alias>fnici</alias>
              <file>${project.build.directory}/fnici.crt</file>
              <storepass>storepass</storepass>
            </configuration>
          </execution>
          <execution>
            <phase>generate-resources</phase>
            <id>importkey</id>
            <goals>
              <goal>importCertificate</goal>
            </goals>
            <configuration>
              <keystore>${project.build.directory}/fnici.keystore</keystore>
              <alias>root</alias>
              <file>${project.build.directory}/fnici.crt</file>
              <storepass>storepass</storepass>
              <noprompt>true</noprompt>
              <trustcacerts>true</trustcacerts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.4.8</version>
        <configuration>
          <container>
            <containerId>wildfly8x</containerId>
            <log>${project.basedir}/target/cargo.log</log>
            <output>${project.basedir}/target/wildfly.log</output>
            <zipUrlInstaller>
              <url>http://download.jboss.org/wildfly/8.1.0.CR1/wildfly-8.1.0.CR1.zip</url>
              <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
              <extractDir>${project.basedir}/.cargo/extracts</extractDir>
            </zipUrlInstaller>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
              </dependency>
            </dependencies>
          </container>
          <configuration>
            <properties>
              <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
              <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
              <cargo.jvmargs>-Xms64m -Xmx1152m -XX:MaxPermSize=512m -XX:-UseSplitVerifier</cargo.jvmargs>
              <cargo.datasource.datasource.fnici>
                cargo.datasource.driver=${it.jdbc.driver}|
                cargo.datasource.url=${it.jdbc.url}|
                cargo.datasource.jndi=${it.jdbc.jndi}|
                cargo.datasource.username=${it.jdbc.username}|
                cargo.datasource.password=${it.jdbc.password}|
                cargo.datasource.transactionsupport=LOCAL_TRANSACTION
              </cargo.datasource.datasource.fnici>
            </properties>    
          </configuration>
          <deployables>
            <deployable>
              <properties>
                <context>${it.ctx}</context>
              </properties>
              <pingURL>http://${it.host}:${it.port.http}/${it.ctx}</pingURL>
              <pingTimeout>600000</pingTimeout>
            </deployable>
          </deployables>

        </configuration>
        <executions>
          <execution>
            <id>start-cargo</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-cargo</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.wildfly.plugins</groupId>
        <artifactId>wildfly-maven-plugin</artifactId>
        <version>1.0.1.Final</version>
        <executions>
          <execution>
            <id>add-https</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>execute-commands</goal>
            </goals>
            <configuration>
              <execute-commands>
                <batch>true</batch>
                <commands>
                  <command>/subsystem=undertow/server=default-server/https-listener=https:add(socket-binding="https",security-realm="ssl-realm")</command>
                  <command>/core-service=management/security-realm=ssl-realm:add()</command>
                  <command>/core-service=management/security-realm=ssl-realm/server-identity=ssl:add(keystore-path="${project.build.directory}/fnici.keystore",keystore-password="storepass",alias="fnici")</command>
                </commands>
              </execute-commands>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>

    <!-- JBoss -->

    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>

    <!-- Diff-patch-match -->

    <repository>
      <id>google-diff-patch-match</id>
      <name>google-diff-patch-match</name>
      <url>http://google-diff-match-patch.googlecode.com/svn/trunk/maven/</url>
    </repository>
  </repositories>

</project>
