<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>webapp</artifactId>
  <packaging>war</packaging>
  <name>Forge &amp; Illusion - Web App</name>
  <description>Forge &amp; Illusion - Web Application</description>
  <parent>
    <groupId>fi.foyt.fni</groupId>
    <artifactId>parent</artifactId>
    <version>3.2.2-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <dependencies>

    <!-- Servlet -->

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Transactions -->
    
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Mail -->

    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- CDI -->

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EJB -->

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EL -->

    <dependency>
      <groupId>org.jboss.spec.javax.el</groupId>
      <artifactId>jboss-el-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Faces -->

    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- RESTEasy -->

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Hibernate -->
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-infinispan</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-orm</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-analyzers</artifactId>
      <scope>provided</scope>
    </dependency>
  
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-search-infinispan</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-memory</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Xalan -->

    <dependency>
      <groupId>org.apache.xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Rewrite -->

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-faces</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-cdi</artifactId>
    </dependency>

    <!-- NGram -->

    <dependency>
      <groupId>de.spieleck.app.ngramj</groupId>
      <artifactId>cngram</artifactId>
    </dependency>

    <!-- Apache Commons -->

    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>provided</scope>
    </dependency> 

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <scope>provided</scope>
    </dependency> 

    <!-- Http components -->

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- FnI -->

    <dependency>
      <groupId>fi.foyt.fni</groupId>
      <artifactId>persistence</artifactId>
    </dependency>

    <!-- Paytrail -->

    <dependency>
      <groupId>fi.foyt.paytrail</groupId>
      <artifactId>paytrail-sdk</artifactId>
    </dependency>

    <!-- Scribe -->

    <dependency>
      <groupId>org.scribe</groupId>
      <artifactId>scribe</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Flying Saucer -->

    <dependency>
      <groupId>org.xhtmlrenderer</groupId>
      <artifactId>flying-saucer-pdf-itext5</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- CSS Parser -->

    <dependency>
      <groupId>net.sourceforge.cssparser</groupId>
      <artifactId>cssparser</artifactId>
    </dependency>

    <!-- Diff patch match -->

    <dependency>
      <groupId>diff_match_patch</groupId>
      <artifactId>diff_match_patch</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- JTidy -->

    <dependency>
      <groupId>net.sf.jtidy</groupId>
      <artifactId>jtidy</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Google Drive API -->

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-drive</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <!-- Rome -->

    <dependency>
      <groupId>net.java.dev.rome</groupId>
      <artifactId>rome</artifactId>
    </dependency>

    <!-- Lucene Highlighter -->

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-highlighter</artifactId>
    </dependency>

    <!-- Jackson -->

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- WebSockets -->
    
    <dependency>
      <groupId>org.jboss.spec.javax.websocket</groupId>
      <artifactId>jboss-websocket-api_1.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Joda -->
    
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Test -->
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jglue.cdi-unit</groupId>
      <artifactId>cdi-unit</artifactId>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.saucelabs</groupId>
      <artifactId>sauce_junit</artifactId>
      <version>[1.0.0,)</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.icegreen</groupId>
      <artifactId>greenmail</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.mail</groupId>
          <artifactId>mail</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>fi.foyt.coops</groupId>
      <artifactId>coops-spec</artifactId>
    </dependency>
  </dependencies>
   
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jasig.maven</groupId>
                    <artifactId>sass-maven-plugin</artifactId>
                    <versionRange>[1.1.1,)</versionRange>
                    <goals>
                      <goal>update-stylesheets</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <versionRange>[1.4,)</versionRange>
                    <goals>
                      <goal>clean</goal>
                      <goal>generateKeyPair</goal>
                      <goal>exportCertificate</goal>
                      <goal>importCertificate</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <versionRange>[1.0-alpha-2,)</versionRange>
                    <goals>
                      <goal>read-project-properties</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>

              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <id>sassProcessSource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <useCompass>true</useCompass>
              <sassSourceDirectory>${basedir}/src/main/webapp/resources/novus/scss/</sassSourceDirectory>
              <destination>${project.build.directory}/${project.build.finalName}/resources/novus/css</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Dependencies>org.hibernate.search.orm services, org.apache.commons.io, org.apache.commons.collections, org.apache.commons.codec, org.codehaus.jackson.jackson-core-asl, org.codehaus.jackson.jackson-mapper-asl, org.apache.httpcomponents, org.joda.time</Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>it</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <properties>
        <wildfly.home>${project.basedir}/.cargo/extracts/wildfly-8.1.0.Final/wildfly-8.1.0.Final</wildfly.home>
        <wildfly.version>8.1.0.Final</wildfly.version>
        <h2.version>1.4.177</h2.version>
        <it.port.http>8080</it.port.http>
        <it.port.https>8443</it.port.https>
        <it.smtp.port>3025</it.smtp.port>
        <it.host>dev.forgeandillusion.net</it.host>
        <it.ctx>fnici</it.ctx>
        <it.jdbc.driver>org.h2.Driver</it.jdbc.driver>
        <it.jdbc.url>jdbc:h2:file:${project.build.directory}/h2;AUTO_SERVER=TRUE</it.jdbc.url>
        <it.jdbc.jndi>java:/jboss/datasources/fni</it.jdbc.jndi>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
      </properties>
      
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
          <scope>test</scope>
        </dependency>   

        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </dependency>
    
        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </dependency>
        
      </dependencies>
      <build>
        <plugins>
      
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.14.1</version>
            <configuration>
              <systemPropertyVariables>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0-alpha-2</version>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>src/test/resources/it.properties</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
    
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.16</version>
            <configuration>
              <includes>
                <include>fi/foyt/fni/test/ui/chrome/**/*IT.java</include>
              </includes>
              <systemPropertyVariables>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.project.version>${project.version}</it.project.version>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.port.https>${it.port.https}</it.port.https>
                <it.smtp.port>${it.smtp.port}</it.smtp.port>
                <it.ctx>${it.ctx}</it.ctx>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
                <it.google.apiKey>${it.google.apiKey}</it.google.apiKey>
                <it.google.apiSecret>${it.google.apiSecret}</it.google.apiSecret>
                <it.google.username>${it.google.username}</it.google.username>
                <it.google.password>${it.google.password}</it.google.password>
                <it.facebook.apiKey>${it.facebook.apiKey}</it.facebook.apiKey>
                <it.facebook.apiSecret>${it.facebook.apiSecret}</it.facebook.apiSecret>
                <it.facebook.username>${it.facebook.username}</it.facebook.username>
                <it.facebook.password>${it.facebook.password}</it.facebook.password>
                <it.dropbox.apiKey>${it.dropbox.apiKey}</it.dropbox.apiKey>
                <it.dropbox.apiSecret>${it.dropbox.apiSecret}</it.dropbox.apiSecret>
                <it.dropbox.username>${it.dropbox.username}</it.dropbox.username>
                <it.dropbox.password>${it.dropbox.password}</it.dropbox.password>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
    
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
              </dependency>
            </dependencies>
    
            <configuration>      
              <driver>${it.jdbc.driver}</driver>
              <url>${it.jdbc.url}</url>
              <username>${it.jdbc.username}</username>
              <password>${it.jdbc.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>create-schema</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>src/test/resources/create.sql</srcFile>
                    <srcFile>src/test/resources/data.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              
              <execution>
                <id>drop-db-after-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>src/test/resources/drop.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>keytool-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <id>keyclean</id>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                </configuration>
              </execution>
              <execution> 
                <phase>generate-resources</phase>
                <id>genkey</id>
                <goals>
                  <goal>generateKeyPair</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <dname>cn=${it.host}, ou=None, L=Test, ST=Test, o=Test, c=TE</dname>
                  <storepass>storepass</storepass>
                  <alias>fnici</alias>
                  <keyalg>RSA</keyalg>
                  <keysize>2048</keysize>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>exportkey</id>
                <goals>
                  <goal>exportCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <alias>fnici</alias>
                  <file>${project.build.directory}/fnici.crt</file>
                  <storepass>storepass</storepass>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>importkey</id>
                <goals>
                  <goal>importCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <alias>root</alias>
                  <file>${project.build.directory}/fnici.crt</file>
                  <storepass>storepass</storepass>
                  <noprompt>true</noprompt>
                  <trustcacerts>true</trustcacerts>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.8</version>
            <configuration>
              <container>
                <containerId>wildfly8x</containerId>
                <log>${project.basedir}/target/cargo.log</log>
                <output>${project.basedir}/target/wildfly.log</output>
                <zipUrlInstaller>
                  <url>http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</url>
                  <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
                  <extractDir>${project.basedir}/.cargo/extracts</extractDir>
                </zipUrlInstaller>
                <dependencies>
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                  </dependency>
                </dependencies>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
                  <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                  <cargo.jvmargs>-Xms64m -Xmx1152m -XX:MaxPermSize=512m -XX:-UseSplitVerifier</cargo.jvmargs>
                  <cargo.datasource.datasource.fnici>
                    cargo.datasource.driver=${it.jdbc.driver}|
                    cargo.datasource.url=${it.jdbc.url}|
                    cargo.datasource.jndi=${it.jdbc.jndi}|
                    cargo.datasource.username=${it.jdbc.username}|
                    cargo.datasource.password=${it.jdbc.password}|
                    cargo.datasource.transactionsupport=LOCAL_TRANSACTION
                  </cargo.datasource.datasource.fnici>
                </properties>    
              </configuration>

              <deployables>
                <deployable>
                  <properties>
                    <context>${it.ctx}</context>
                  </properties>
                </deployable>
              </deployables>

            </configuration>
            <executions>
              <execution>
                <id>start-cargo</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-cargo</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>1.0.1.Final</version>
            <executions>
              <execution>
                <id>configure-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <batch>true</batch>
                    <commands>
                      <command>/system-property=fni-google-drive.keyFile:add(value="${it.googleDrive.keyFile}")</command>
                      <command>/system-property=fni-google-drive.accountId:add(value="${it.googleDrive.accountId}")</command>
                      <command>/system-property=fni-google-drive.accountUser:add(value="${it.googleDrive.accountUser}")</command>
                      <command>/system-property=fni-host:add(value="${it.host}")</command>
                      <command>/system-property=fni-http-port:add(value="${it.port.http}")</command>
                      <command>/system-property=fni-https-port:add(value="${it.port.https}")</command>
                      <command>/core-service=management/security-realm=ssl-realm:add()</command>
                      <command>/core-service=management/security-realm=ssl-realm/server-identity=ssl:add(keystore-path="${project.build.directory}/fnici.keystore",keystore-password="storepass",alias="fnici")</command>
                      <command>/subsystem=undertow/server=default-server/https-listener=https:add(socket-binding="https",security-realm="ssl-realm")</command>
                      <command>/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-smtp/:write-attribute(name=port,value=${it.smtp.port})</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
              
              <execution>
                <id>reload-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <commands>
                      <command>:reload</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
            </executions>
          </plugin>
                    
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/${it.ctx}</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sauce</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      
      <properties>
        <wildfly.home>${project.basedir}/.cargo/extracts/wildfly-8.1.0.Final/wildfly-8.1.0.Final</wildfly.home>
        <wildfly.version>8.1.0.Final</wildfly.version>
        <h2.version>1.4.177</h2.version>
        <it.port.http>8080</it.port.http>
        <it.port.https>8443</it.port.https>
        <it.host>dev.forgeandillusion.net</it.host>
        <it.ctx>fnici</it.ctx>
        <it.smtp.port>3025</it.smtp.port>
        <it.jdbc.driver>org.h2.Driver</it.jdbc.driver>
        <it.jdbc.url>jdbc:h2:file:${project.build.directory}/h2;AUTO_SERVER=TRUE</it.jdbc.url>
        <it.jdbc.jndi>java:/jboss/datasources/fni</it.jdbc.jndi>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
      </properties>
      
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
          <scope>test</scope>
        </dependency>

        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </dependency>
    
        <dependency>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.14.1</version>
            <configuration>
              <systemPropertyVariables>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
              </systemPropertyVariables>
            </configuration>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.0-alpha-2</version>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  
                  <files>
                    <file>src/test/resources/it.properties</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
    
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.16</version>
            <configuration>
              <includes>
                <include>fi/foyt/fni/test/ui/sauce/**/*IT.java</include>
              </includes>
              <systemPropertyVariables>
                <jboss.home>${wildfly.home}</jboss.home>
                <module.path>${wildfly.home}/modules</module.path>
                <it.project.version>${project.version}</it.project.version>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.port.https>${it.port.https}</it.port.https>
                <it.ctx>${it.ctx}</it.ctx>
                <it.smtp.port>${it.smtp.port}</it.smtp.port>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
                <it.google.apiKey>${it.google.apiKey}</it.google.apiKey>
                <it.google.apiSecret>${it.google.apiSecret}</it.google.apiSecret>
                <it.google.username>${it.google.username}</it.google.username>
                <it.google.password>${it.google.password}</it.google.password>
                <it.facebook.apiKey>${it.facebook.apiKey}</it.facebook.apiKey>
                <it.facebook.apiSecret>${it.facebook.apiSecret}</it.facebook.apiSecret>
                <it.facebook.username>${it.facebook.username}</it.facebook.username>
                <it.facebook.password>${it.facebook.password}</it.facebook.password>
                <it.dropbox.apiKey>${it.dropbox.apiKey}</it.dropbox.apiKey>
                <it.dropbox.apiSecret>${it.dropbox.apiSecret}</it.dropbox.apiSecret>
                <it.dropbox.username>${it.dropbox.username}</it.dropbox.username>
                <it.dropbox.password>${it.dropbox.password}</it.dropbox.password>
                <it.sauce.username>${it.sauce.username}</it.sauce.username>
                <it.sauce.accessKey>${it.sauce.accessKey}</it.sauce.accessKey>
                <it.sauce.host>${it.sauce.host}</it.sauce.host>
                <it.sauce.port>${it.sauce.port}</it.sauce.port>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
    
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>sql-maven-plugin</artifactId>
            <version>1.5</version>
            <dependencies>
              <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
              </dependency>
            </dependencies>
    
            <configuration>      
              <driver>${it.jdbc.driver}</driver>
              <url>${it.jdbc.url}</url>
              <username>${it.jdbc.username}</username>
              <password>${it.jdbc.password}</password>
            </configuration>
            <executions>
              <execution>
                <id>create-schema</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>src/test/resources/create.sql</srcFile>
                    <srcFile>src/test/resources/data.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
              
              <execution>
                <id>drop-db-after-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <autocommit>true</autocommit>
                  <srcFiles>
                    <srcFile>src/test/resources/drop.sql</srcFile>
                  </srcFiles>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>keytool-maven-plugin</artifactId>
            <version>1.4</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <id>keyclean</id>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                </configuration>
              </execution>
              <execution> 
                <phase>generate-resources</phase>
                <id>genkey</id>
                <goals>
                  <goal>generateKeyPair</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <dname>cn=${it.host}, ou=None, L=Test, ST=Test, o=Test, c=TE</dname>
                  <storepass>storepass</storepass>
                  <alias>fnici</alias>
                  <keyalg>RSA</keyalg>
                  <keysize>2048</keysize>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>exportkey</id>
                <goals>
                  <goal>exportCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <alias>fnici</alias>
                  <file>${project.build.directory}/fnici.crt</file>
                  <storepass>storepass</storepass>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>importkey</id>
                <goals>
                  <goal>importCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${project.build.directory}/fnici.keystore</keystore>
                  <alias>root</alias>
                  <file>${project.build.directory}/fnici.crt</file>
                  <storepass>storepass</storepass>
                  <noprompt>true</noprompt>
                  <trustcacerts>true</trustcacerts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>com.saucelabs.maven.plugin</groupId>
            <artifactId>sauce-connect-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
              <sauceUsername>${it.sauce.username}</sauceUsername>
              <sauceAccessKey>${it.sauce.accessKey}</sauceAccessKey>
            </configuration>
            <executions>
              <execution>
                <id>start-sauceconnct</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start-sauceconnect</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-sauceconnect</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop-sauceconnect</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.8</version>
            <configuration>
              <container>
                <containerId>wildfly8x</containerId>
                <log>${project.basedir}/target/cargo.log</log>
                <output>${project.basedir}/target/wildfly.log</output>
                <zipUrlInstaller>
                  <url>http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</url>
                  <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
                  <extractDir>${project.basedir}/.cargo/extracts</extractDir>
                </zipUrlInstaller>
                <dependencies>
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                  </dependency>
                </dependencies>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
                  <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                  <cargo.jvmargs>-Xms64m -Xmx1152m -XX:MaxPermSize=512m -XX:-UseSplitVerifier</cargo.jvmargs>
                  <cargo.datasource.datasource.fnici>
                    cargo.datasource.driver=${it.jdbc.driver}|
                    cargo.datasource.url=${it.jdbc.url}|
                    cargo.datasource.jndi=${it.jdbc.jndi}|
                    cargo.datasource.username=${it.jdbc.username}|
                    cargo.datasource.password=${it.jdbc.password}|
                    cargo.datasource.transactionsupport=LOCAL_TRANSACTION
                  </cargo.datasource.datasource.fnici>
                </properties>    
              </configuration>
              <deployables>
                <deployable>
                  <properties>
                    <context>${it.ctx}</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
            <executions>
              <execution>
                <id>start-cargo</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-cargo</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>1.0.1.Final</version>
            <executions>
              <execution>
                <id>configure-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <batch>true</batch>
                    <commands>
                      <command>/system-property=fni-google-drive.keyFile:add(value="${it.googleDrive.keyFile}")</command>
                      <command>/system-property=fni-google-drive.accountId:add(value="${it.googleDrive.accountId}")</command>
                      <command>/system-property=fni-google-drive.accountUser:add(value="${it.googleDrive.accountUser}")</command>
                      <command>/system-property=fni-host:add(value="${it.host}")</command>
                      <command>/system-property=fni-http-port:add(value="${it.port.http}")</command>
                      <command>/system-property=fni-https-port:add(value="${it.port.https}")</command>
                      <command>/core-service=management/security-realm=ssl-realm:add()</command>
                      <command>/core-service=management/security-realm=ssl-realm/server-identity=ssl:add(keystore-path="${project.build.directory}/fnici.keystore",keystore-password="storepass",alias="fnici")</command>
                      <command>/subsystem=undertow/server=default-server/https-listener=https:add(socket-binding="https",security-realm="ssl-realm")</command>
                      <command>/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-smtp/:write-attribute(name=port,value=${it.smtp.port})</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
              
              <execution>
                <id>reload-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <commands>
                      <command>:reload</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
            </executions>
          </plugin>
                    
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>      
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/${it.ctx}</file>
                  <maxcount>20</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      
      <pluginRepositories>
        <pluginRepository>
          <id>saucelabs-repository</id>
          <url>https://repository-saucelabs.forge.cloudbees.com/release</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>

  <repositories>

    <!-- JBoss -->

    <repository>
      <id>repository.jboss.org-public</id>
      <name>JBoss repository</name>
      <url>https://repository.jboss.org/nexus/content/groups/public</url>
    </repository>

    <!-- Diff-patch-match -->

    <repository>
      <id>google-diff-patch-match</id>
      <name>google-diff-patch-match</name>
      <url>http://google-diff-match-patch.googlecode.com/svn/trunk/maven/</url>
    </repository>
    
    <!-- Sauce Labs -->
    
    <repository>
      <id>saucelabs-repository</id>
      <url>https://repository-saucelabs.forge.cloudbees.com/release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

</project>
